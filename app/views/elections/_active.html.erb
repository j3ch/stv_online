<head>

  <meta charset="utf-8">

  <title>STV Election <%= @election.title %></title>

  <style>

  h1 { padding: .2em; margin: 0; }

  #candidate-list { width: 400px; float:left; }

  #ballot { width: 400px; min-height: 400px; float:left; }

  /* style the list to maximize the droppable hitarea */
  #header { text-align: center; padding: 10px 0; margin: 10px 0; border-bottom: 1px solid black; }
  #ballot ol { margin: 0; padding: 1em 0 1em 3em; }
  #candidate-list ul { list-style-type: none; padding-left: 0; }
  li { width: 300px; margin: 5px;padding: 5px; border: dotted 1px black; background: #EBF5FF; }
  .remove-button {float:right}
  .submit-button { margin: 1em; }
  .column { margin: 5px; line-height: 2em; }
  .placeholder { background: #eeeeee; }

  </style>

  <script>

  $(function() {

    $( "#candidate-list li" ).draggable({

      appendTo: "body",
      helper: "clone",
    });


    $( "#ballot ol" ).droppable({

      activeClass: "ui-state-default",

      hoverClass: "ui-state-hover",

      accept: ":not(.ui-sortable-helper)",

      drop: function( event, ui ) {

        $( this ).find( ".placeholder" ).remove();
        var candidateId = $(ui.draggable[0]).attr("candidateId");

        if ($(".ballot-entry[candidateId="+candidateId+"]")[0] != undefined)
            return;
        
        $ballotEntry = $( "<li class='ballot-entry'></li>" ).attr('candidateId', candidateId).text( ui.draggable.text() );
        $removeButton = $("<span class='remove-button'>[X]</span>").click(function() { $(".ballot-entry[candidateId="+candidateId+"]").remove(); });
       
        $removeButton.appendTo($ballotEntry);
        $ballotEntry.appendTo( this );

      }

    }).sortable({

      items: "li:not(.placeholder)",

      sort: function() {

        // gets added unintentionally by droppable interacting with sortable

        // using connectWithSortable fixes this, but doesn't allow you to customize active/hoverClass options

        $( this ).removeClass( "ui-state-default" );

      }

    });

  });

  function reviewBallot()
  {
    $ids = [];
    $(".ballot-entry").each( function(ind, val) {
        $ids.push( $(val).attr('candidateId') );
    } );
    $("#ballotEntries").val( $ids.toString());
    $("#ballotForm").submit();
  }

  </script>

</head>

<body>
<%= render partial: "shared/header" %>
<%= render partial: "shared/flash_messages", flash: flash %>

</div>

<div id="header">
<div><h1><%= @election.title %></h1></div>
<div class="description"><%= @election.description %></div>
</div> 

<div id="content-wrapper">
<%= form_for :ballot, url: ballot_index_path, :id => "ballotForm" do |f| %>
<div id="candidate-list" class="column">

  <h1>1. Candidates</h1>
  <div classs="description">Drag candidates onto your ballot</div>

  <div class="ui-widget-content">

    <ul>
      <% @election.candidates.each do |c| %>

      <li class="candidate-draggable" candidateId="<%= c.id %>"><%= c.name %></li>

      <% end %>

    </ul>

  </div>

</div>

 

<div id="ballot" class="column">

  <h1>2. Your Ranked Ballot</h1>
  <div classs="description">Order the candidates by preference</div>

  <div class="ui-widget-content">

    <ol id="ballot-list">

      <li class="placeholder">Add your items here</li>

    </ol>

  </div>

</div>





<div id="voter-info" class="column">

<h1>3. Your Info</h1>
<div><%= f.label :voterName, "Name: " %><%= f.text_field :voterName %></div>

</div>

<%= f.hidden_field :ballotEntries, :id => "ballotEntries" %>
<%= f.hidden_field :electionId, :value => @election.id %>
<%= submit_tag "Submit", :onclick =>"return reviewBallot();", :class => "submit-button" %>

<% end %>
</div>
</body>


